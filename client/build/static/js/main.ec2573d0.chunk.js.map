{"version":3,"sources":["components/Chat.jsx","components/Name.jsx","App.js","reportWebVitals.js","index.js"],"names":["Chat","props","useState","io","socket","messages","setMessage","input","setinput","useEffect","axios","get","then","res","console","log","data","on","prev","disconnect","className","map","message","name","onSubmit","e","preventDefault","post","emit","type","value","onChange","target","placeholder","style","padding","Name","setname","pokimon","setpokimon","poki","setpoki","personname","setpersonname","response","results","navigate","length","index","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec2573d0.chunk.js","sourcesContent":["import './styles.css'\r\nimport React, { useEffect, useState } from \"react\"\r\nimport io from \"socket.io-client\"\r\nimport axios from \"axios\"\r\n\r\n\r\nconst Chat = (props)=> {\r\n    const [socket] = useState(() => io(\":8000\"))\r\n    const [messages, setMessage] = useState([])\r\n    const [input,setinput] = useState(\"\")\r\n\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:8000/api/chat/')\r\n        .then(res => {\r\n            console.log(res.data)\r\n            setMessage(res.data);\r\n        })\r\n    socket.on(\"data\", (data) => {\r\n        console.log(data)\r\n        setMessage(prev=> {return [...prev,data];})\r\n    })\r\n    \r\n    return () => socket.disconnect(true)\r\n    }, [])\r\n    \r\n    const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    axios\r\n        .post(\"http://localhost:8000/api/name\", {\r\n            name:props.name,message:input\r\n        })\r\n        .then((res) => console.log(res))\r\n    socket.emit(\"event_from_client\", {name:props.name, message:input})\r\n    setinput(\"\")\r\n    }\r\n\r\n    const handleInput = (e) =>{\r\n        setinput(e.target.value)\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <div className=\"container\">\r\n        <h1>Live Chat</h1>\r\n        <div className=\"center1\">\r\n        {messages.map((message)=>\r\n        props.name === message.name?\r\n        <div className=\"messagel\">\r\n        <p>\r\n            <p><b>{message.name}:</b></p>\r\n            {message.message}\r\n        </p></div> : \r\n        <div className=\"messager\">\r\n        <p>\r\n            <p><b>{message.name}:</b></p>\r\n            {message.message}\r\n        </p></div>\r\n        )}\r\n        </div>\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <input type=\"text\" value={input} onChange={ handleInput } placeholder=\"Type your message...\"/>\r\n                <button type=\"submit\" style={{padding:10}}>Send</button>\r\n            </div>\r\n        </form>\r\n        </div>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default Chat ;","import { useState } from 'react'\r\nimport { navigate } from '@reach/router'\r\nimport axios from \"axios\"\r\nconst Name = ({name, setname})=> {\r\n    const [pokimon,setpokimon] = useState([])\r\n    const [poki,setpoki] = useState(\"spearow\")\r\n    const [personname, setpersonname] = useState(\"\")\r\n\r\n    axios\r\n        .get(\"https://pokeapi.co/api/v2/pokemon?limit=10&offset=20\")\r\n        .then((response) => {\r\n            setpokimon(response.data.results)\r\n        })\r\n\r\n    const handle = (e) => {\r\n        e.preventDefault()\r\n        if(name!==\"\" && personname!==\"\"){\r\n            navigate('/chat')\r\n        }\r\n    }\r\n    const change = (e) =>{\r\n        setname(personname + \" (\" + e.target.value + \")\")\r\n        setpoki(e.target.value)\r\n    }\r\n    return (\r\n        <>\r\n        {/* <div className=\"App\"> */}\r\n        <h1>Welcome ! Choose your Pokimon Character!</h1>\r\n        <div className=\"center\">\r\n        <form onSubmit={handle}>\r\n        <input type=\"text\" placeholder=\"Enter your name here\"onChange={(e)=>setpersonname(e.target.value)} />\r\n        <br />\r\n        <select value={poki}  onChange={change}>\r\n            {/* <option value={name}>select a value</option> */}\r\n        { pokimon.length > 0 && pokimon.map((poki, index) => {\r\n            return (\r\n                <option value={poki.name} key={index}>\r\n                {poki.name}\r\n            </option>\r\n            )\r\n        })}\r\n        </select>\r\n        <button type=\"submit\">Choose</button>\r\n        </form>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Name ;\r\n","import \"./App.css\"\n// import 'bootstrap/dist/css/bootstrap.min.css';\nimport Chat from './components/Chat'\nimport Name from './components/Name'\nimport { Router } from '@reach/router';\nimport { useState } from 'react'\n\nfunction App() {\n  const [name,setname] = useState(\"\")\n\n  return (\n    <>\n    <Router>\n    <Name name={name} setname={setname} path=\"/\"/>\n    <Chat name={name} setname={setname} path=\"/chat\"/>\n    </Router>\n    </>\n  )\n}\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}